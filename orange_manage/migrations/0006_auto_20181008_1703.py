# Generated by Django 2.1a1 on 2018-10-08 17:03

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('orange_manage', '0005_delete_shopauditlog'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address_id', models.AutoField(primary_key=True, serialize=False)),
                ('campus_id', models.IntegerField()),
                ('parent_id', models.IntegerField()),
                ('value', models.CharField(max_length=255)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('have_subordinate', models.IntegerField(blank=True, null=True)),
                ('gender', models.IntegerField()),
            ],
            options={
                'db_table': 'address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=20)),
                ('pwd', models.CharField(max_length=255)),
                ('realname', models.CharField(max_length=20)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=255)),
                ('qq', models.CharField(max_length=20)),
                ('last_ip', models.CharField(blank=True, max_length=20, null=True)),
                ('last_time', models.DateTimeField(blank=True, null=True)),
                ('login_count', models.IntegerField()),
                ('status', models.IntegerField()),
                ('level', models.PositiveIntegerField()),
                ('menus', models.TextField()),
                ('openid', models.CharField(blank=True, max_length=100, null=True)),
                ('nickname', models.CharField(blank=True, max_length=50, null=True)),
                ('permission_group', models.CharField(blank=True, max_length=200, null=True)),
                ('sort_menus', models.CharField(blank=True, max_length=1000, null=True)),
                ('open_admin_region', models.IntegerField()),
                ('authority_group_id', models.IntegerField(blank=True, null=True)),
                ('admin_key', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('img', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('state', models.IntegerField()),
                ('priority', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'app_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('img', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('state', models.IntegerField()),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('priority', models.IntegerField()),
                ('has_prescription', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'banner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('campus_id', models.AutoField(primary_key=True, serialize=False)),
                ('campus', models.CharField(max_length=255)),
                ('university_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'campus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CashApplications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identity', models.IntegerField()),
                ('account_id', models.IntegerField()),
                ('cash_account_type', models.IntegerField()),
                ('cash_account', models.CharField(max_length=255)),
                ('account_holder', models.CharField(max_length=255)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.IntegerField()),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('operator_name', models.CharField(blank=True, max_length=255, null=True)),
                ('operator_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('create_time', models.DateTimeField()),
                ('payment_time', models.DateTimeField(blank=True, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('account_phone', models.CharField(max_length=12)),
            ],
            options={
                'db_table': 'cash_applications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Circle',
            fields=[
                ('circle_id', models.AutoField(primary_key=True, serialize=False)),
                ('circle_name', models.CharField(max_length=255)),
                ('region_id', models.IntegerField()),
                ('priority', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'circle',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CircleShop',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('circle_id', models.IntegerField()),
                ('shop_id', models.IntegerField()),
            ],
            options={
                'db_table': 'circle_shop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.AutoField(primary_key=True, serialize=False)),
                ('coupon_name', models.CharField(max_length=255)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_id', models.IntegerField()),
                ('coupon_type', models.IntegerField()),
                ('use_condition', models.DecimalField(decimal_places=2, max_digits=10)),
                ('coupon_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_period', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField()),
                ('publish_amount', models.IntegerField()),
                ('spare_amount', models.IntegerField(blank=True, null=True)),
                ('user_limit_quantity', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('superposable', models.IntegerField()),
                ('shop_classify', models.CharField(max_length=11)),
                ('goods_classify', models.CharField(max_length=255)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('just_newuser', models.IntegerField()),
            ],
            options={
                'db_table': 'coupon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('distributor_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.IntegerField()),
                ('phone_number', models.CharField(max_length=255)),
                ('id_number', models.CharField(blank=True, max_length=255, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('campus_id', models.IntegerField()),
                ('student_number', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_image', models.CharField(blank=True, max_length=255, null=True)),
                ('register_time', models.DateTimeField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_part_time', models.IntegerField()),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('alipay_account', models.CharField(blank=True, max_length=255, null=True)),
                ('account_holder', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('online', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'distributor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DistributorTransaction',
            fields=[
                ('transaction_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('payee', models.IntegerField(blank=True, null=True)),
                ('payee_account', models.CharField(blank=True, max_length=255, null=True)),
                ('payee_account_type', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('create_time', models.DateTimeField()),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(max_length=11)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('action', models.IntegerField()),
                ('campus_id', models.IntegerField(blank=True, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'distributor_transaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('goods_id', models.AutoField(primary_key=True, serialize=False)),
                ('goods_name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_id', models.IntegerField()),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('pack_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock', models.IntegerField(blank=True, null=True)),
                ('classify_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('auth', models.IntegerField()),
                ('privilege', models.IntegerField()),
                ('platform_classify_id', models.IntegerField(blank=True, null=True)),
                ('purchasing_limitation', models.PositiveIntegerField(blank=True, null=True)),
                ('sales_amount', models.PositiveIntegerField(blank=True, null=True)),
                ('product_code', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recycle', models.IntegerField()),
            ],
            options={
                'db_table': 'goods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsAttributeName',
            fields=[
                ('attribute_name_id', models.AutoField(primary_key=True, serialize=False)),
                ('attribute_name', models.CharField(max_length=255)),
                ('max_selected_num', models.IntegerField()),
                ('goods_id', models.IntegerField()),
            ],
            options={
                'db_table': 'goods_attribute_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsAttributeValue',
            fields=[
                ('attribute_value_id', models.AutoField(primary_key=True, serialize=False)),
                ('attribute_name_id', models.IntegerField()),
                ('attribute_value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'goods_attribute_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsClassify',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('shop_id', models.IntegerField()),
                ('start_time', models.IntegerField()),
                ('end_time', models.IntegerField()),
                ('week_time', models.CharField(max_length=255)),
                ('privilege', models.IntegerField()),
                ('is_show', models.IntegerField()),
            ],
            options={
                'db_table': 'goods_classify',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsClassifyPlatform',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('week_time', models.CharField(blank=True, max_length=255, null=True)),
                ('privilege', models.IntegerField()),
                ('is_show', models.IntegerField()),
            ],
            options={
                'db_table': 'goods_classify_platform',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsComment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('goods_id', models.IntegerField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(max_length=255)),
                ('time', models.DateTimeField()),
                ('comment_content', models.CharField(max_length=255)),
                ('to_comment_id', models.IntegerField()),
            ],
            options={
                'db_table': 'goods_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsImage',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('goods_id', models.IntegerField()),
                ('image', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'goods_image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsInfo',
            fields=[
                ('goods_id', models.IntegerField(primary_key=True, serialize=False)),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('product_standard_number', models.CharField(blank=True, max_length=255, null=True)),
                ('producing_area', models.CharField(blank=True, max_length=255, null=True)),
                ('quality_guarantee_period', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goods_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsSpecification',
            fields=[
                ('specification_id', models.AutoField(primary_key=True, serialize=False)),
                ('goods_id', models.IntegerField()),
                ('unit', models.CharField(max_length=255)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('original_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('stock', models.IntegerField()),
                ('sales_amount', models.PositiveIntegerField(blank=True, null=True)),
                ('spec', models.CharField(blank=True, max_length=1000, null=True)),
                ('product_code', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'goods_specification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsSpecName',
            fields=[
                ('spec_name_id', models.AutoField(primary_key=True, serialize=False)),
                ('spec_name', models.CharField(max_length=255)),
                ('goods_id', models.IntegerField()),
            ],
            options={
                'db_table': 'goods_spec_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsSpecValue',
            fields=[
                ('spec_value_id', models.AutoField(primary_key=True, serialize=False)),
                ('spec_name_id', models.IntegerField()),
                ('spec_value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'goods_spec_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IemiLog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('imei', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=11)),
                ('activity', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iemi_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvitationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=11)),
                ('invitation_user', models.IntegerField()),
                ('commission', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'invitation_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('field_function_name', models.CharField(db_column='\nfunction_name', max_length=255)),
                ('field_function_url', models.CharField(db_column='\nfunction_url', max_length=255)),
            ],
            options={
                'db_table': 'menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NecessaryGoods',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('shop_id', models.IntegerField()),
                ('goods_id', models.IntegerField()),
            ],
            options={
                'db_table': 'necessary_goods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderGoods',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.CharField(max_length=255)),
                ('sub_order_id', models.CharField(max_length=255)),
                ('goods_id', models.IntegerField()),
                ('specification_id', models.IntegerField(blank=True, null=True)),
                ('goods_name', models.CharField(max_length=255)),
                ('goods_amount', models.IntegerField()),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_recycle', models.IntegerField()),
                ('specification_values', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_values', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'order_goods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('order_status', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField()),
                ('distributor_id', models.IntegerField(blank=True, null=True)),
                ('distributor_name', models.CharField(blank=True, max_length=255, null=True)),
                ('distributor_phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('distributor_comment', models.CharField(blank=True, max_length=255, null=True)),
                ('distributor_service_rating', models.IntegerField(blank=True, null=True)),
                ('distributor_speed_rating', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField()),
                ('pay_time', models.DateTimeField(blank=True, null=True)),
                ('order_get_time', models.DateTimeField(blank=True, null=True)),
                ('goods_get_time', models.DateTimeField(blank=True, null=True)),
                ('distribution_start_time', models.DateTimeField(blank=True, null=True)),
                ('complete_time', models.DateTimeField(blank=True, null=True)),
                ('distribution_mode', models.IntegerField(blank=True, null=True)),
                ('distribution_remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('distribution_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('campus_id', models.IntegerField(blank=True, null=True)),
                ('coupon_id', models.IntegerField(blank=True, null=True)),
                ('coupon_type', models.IntegerField(blank=True, null=True)),
                ('coupon_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pay_mode', models.IntegerField(blank=True, null=True)),
                ('pay_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('unfinished_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user_phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('user_address', models.CharField(blank=True, max_length=255, null=True)),
                ('user_gender', models.IntegerField(blank=True, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('address_type', models.IntegerField(blank=True, null=True)),
                ('goods_amount', models.IntegerField(blank=True, null=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('trade_no', models.CharField(blank=True, max_length=255, null=True)),
                ('last_up_time', models.BigIntegerField(blank=True, null=True)),
                ('distribution_status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrdersGoodsAttribute',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('goods_id', models.IntegerField()),
                ('attribute_name', models.CharField(max_length=255)),
                ('attribute_values', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_order_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'orders_goods_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderStatusLogs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('region_id', models.IntegerField()),
                ('unpaid', models.IntegerField()),
                ('not_robbing', models.IntegerField()),
                ('not_pickup', models.IntegerField()),
                ('picking_up', models.IntegerField()),
                ('dispatching', models.IntegerField()),
                ('pending', models.IntegerField()),
            ],
            options={
                'db_table': 'order_status_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecommendShops',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_id', models.IntegerField()),
                ('shop_name', models.CharField(max_length=255)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('operator_name', models.CharField(max_length=255)),
                ('last_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('img', models.CharField(blank=True, max_length=255, null=True)),
                ('region_id', models.IntegerField()),
                ('operator_id', models.IntegerField()),
            ],
            options={
                'db_table': 'recommend_shops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recovery',
            fields=[
                ('recovery_id', models.IntegerField(primary_key=True, serialize=False)),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('collector_id', models.IntegerField(blank=True, null=True)),
                ('box_num', models.IntegerField()),
                ('chopstick_num', models.IntegerField()),
                ('fork_num', models.IntegerField()),
                ('spoon_num', models.IntegerField()),
                ('place_time', models.DateTimeField()),
                ('recovery_time', models.DateTimeField()),
                ('is_finished', models.CharField(blank=True, max_length=1, null=True)),
                ('unfinished_reason', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'recovery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionCampus',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('region_id', models.IntegerField()),
                ('campus_id', models.IntegerField()),
            ],
            options={
                'db_table': 'region_campus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionConfig',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('region_id', models.IntegerField()),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'region_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionNotice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('campus_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('content', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('trigger_scene', models.IntegerField(blank=True, null=True)),
                ('target', models.IntegerField()),
            ],
            options={
                'db_table': 'region_notice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShopAccount',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('account', models.CharField(max_length=255)),
                ('account_type', models.IntegerField()),
                ('shop_id', models.IntegerField()),
            ],
            options={
                'db_table': 'shop_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShopAuditLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_id', models.IntegerField()),
                ('auth', models.IntegerField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=255, null=True)),
                ('operator_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'shop_audit_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShopCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'shop_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShopComment',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('shop_id', models.IntegerField()),
                ('sub_order_id', models.CharField(max_length=255)),
                ('shop_rating', models.IntegerField(blank=True, null=True)),
                ('shop_comment', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('comment_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'shop_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShopNoticesLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_id', models.IntegerField()),
                ('notice', models.CharField(blank=True, max_length=255, null=True)),
                ('create_datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'shop_notices_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShopPhoto',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('shop_id', models.IntegerField()),
                ('photo', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'shop_photo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShopSort',
            fields=[
                ('sort_id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('sort_name', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.IntegerField()),
                ('state', models.IntegerField()),
            ],
            options={
                'db_table': 'shop_sort',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShopTransaction',
            fields=[
                ('transaction_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('payee', models.IntegerField(blank=True, null=True)),
                ('payee_account', models.CharField(blank=True, max_length=255, null=True)),
                ('payee_account_type', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('create_time', models.DateTimeField()),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(max_length=11)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('action', models.IntegerField()),
                ('campus_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'shop_transaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmsSendLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addressee', models.CharField(max_length=255)),
                ('action_type', models.IntegerField(blank=True, null=True)),
                ('identity_type', models.IntegerField(blank=True, null=True)),
                ('content', models.CharField(max_length=255)),
                ('verify_code', models.CharField(blank=True, max_length=255, null=True)),
                ('valid_till', models.DateTimeField(blank=True, null=True)),
                ('send_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sms_send_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmsTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_id', models.IntegerField(blank=True, null=True)),
                ('template_content', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'sms_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubOrders',
            fields=[
                ('sub_order_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('order_status', models.IntegerField(blank=True, null=True)),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.IntegerField()),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('packing_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pay_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('coupon_id', models.IntegerField(blank=True, null=True)),
                ('coupon_type', models.IntegerField(blank=True, null=True)),
                ('coupon_value', models.FloatField(blank=True, null=True)),
                ('create_time', models.DateTimeField()),
                ('pay_time', models.DateTimeField(blank=True, null=True)),
                ('goods_get_time', models.DateTimeField(blank=True, null=True)),
                ('distribution_start_time', models.DateTimeField(blank=True, null=True)),
                ('complete_time', models.DateTimeField(blank=True, null=True)),
                ('distributor_id', models.IntegerField(blank=True, null=True)),
                ('distributor_name', models.CharField(blank=True, max_length=255, null=True)),
                ('distributor_phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_id', models.IntegerField()),
                ('shop_name', models.CharField(max_length=255)),
                ('shop_assistant_id', models.IntegerField(blank=True, null=True)),
                ('shop_assistant_name', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user_phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('user_address', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('address_type', models.IntegerField(blank=True, null=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('profit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('last_up_time', models.BigIntegerField()),
            ],
            options={
                'db_table': 'sub_orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.IntegerField()),
                ('category_id', models.IntegerField()),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('create_time', models.DateTimeField()),
                ('last_update_time', models.DateTimeField()),
                ('sort', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_news',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemNewsCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=22)),
                ('sort', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'system_news_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'test1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'test2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionRecords',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_no', models.CharField(max_length=255)),
                ('drawee', models.CharField(max_length=255)),
                ('payee', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'transaction_records',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('university_id', models.AutoField(primary_key=True, serialize=False)),
                ('university_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'university',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('nickname', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('gender', models.IntegerField()),
                ('birthday', models.DateField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(max_length=255)),
                ('profile_image', models.CharField(blank=True, max_length=255, null=True)),
                ('campus_id', models.IntegerField(blank=True, null=True)),
                ('register_time', models.DateTimeField()),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_part_time', models.IntegerField(blank=True, null=True)),
                ('spread_code', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField()),
                ('is_verified', models.IntegerField(blank=True, null=True)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('accumulative_consumption', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_password', models.CharField(blank=True, max_length=255, null=True)),
                ('integral', models.PositiveIntegerField()),
                ('last_ip', models.CharField(blank=True, max_length=20, null=True)),
                ('qq', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('user_address_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('region_id', models.IntegerField()),
                ('address_type', models.IntegerField()),
                ('campus_id', models.IntegerField()),
                ('interior_component', models.CharField(blank=True, max_length=255, null=True)),
                ('interior_detail', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('other_address', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=255)),
                ('gender', models.IntegerField()),
                ('is_default', models.IntegerField()),
            ],
            options={
                'db_table': 'user_address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserCoupon',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('coupon_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('coupon_name', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_id', models.IntegerField(blank=True, null=True)),
                ('coupon_type', models.IntegerField(blank=True, null=True)),
                ('use_condition', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('coupon_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('use_time', models.DateTimeField(blank=True, null=True)),
                ('superposable', models.IntegerField(blank=True, null=True)),
                ('is_specific', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_coupon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserIntegral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remitter_id', models.IntegerField()),
                ('remitter_nick', models.CharField(max_length=255)),
                ('payee_id', models.IntegerField()),
                ('payee_nick', models.CharField(max_length=255)),
                ('amount', models.IntegerField()),
                ('time', models.DateTimeField()),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(max_length=255)),
                ('mode', models.CharField(max_length=1)),
                ('university_id', models.IntegerField()),
                ('campus_id', models.IntegerField()),
            ],
            options={
                'db_table': 'user_integral',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserTransaction',
            fields=[
                ('transaction_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('drawee', models.IntegerField(blank=True, null=True)),
                ('drawee_account', models.CharField(blank=True, max_length=255, null=True)),
                ('pay_mode', models.IntegerField()),
                ('other_transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payee', models.IntegerField(blank=True, null=True)),
                ('payee_account', models.CharField(blank=True, max_length=255, null=True)),
                ('payee_account_type', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('create_time', models.DateTimeField()),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(max_length=11)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('action', models.IntegerField()),
                ('campus_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_transaction',
                'managed': False,
            },
        ),
        migrations.AlterModelTable(
            name='addreslibrary',
            table='address_library',
        ),
    ]
